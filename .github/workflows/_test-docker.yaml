on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/_test-docker.yaml"
      - ".github/workflows/docker-*.yaml"
      - "tests/docker/**"

jobs:
  ## Setups
  setup_docker_ecr:
    uses: ./.github/workflows/tf-apply.yaml
    with:
      environment: sandbox
      tf_dir: tests/terraform/docker-ecr
      tf_backend_configs: ""
      tf_backend_config_files: tests/terraform/docker-ecr/environments/sandbox.s3.tfbackend
      tf_var_files: tests/terraform/docker-ecr/environments/sandbox.tfvars

  ## Tests
  test_docker_build_push_ecr:
    uses: ./.github/workflows/docker-build-push-ecr.yaml
    with:
      aws_account_id: ${{ vars.aws_account_id }}
      aws_region: ${{ vars.aws_region }}
      aws_role_name: ${{ vars.aws_role_name }}
      image_name: test-docker-build-push
      image_tag: ${{ github.sha }}
      docker_context: tests/docker
      docker_push: false

  test_docker_build_push_ecr_no_image_tag:
    uses: ./.github/workflows/docker-build-push-ecr.yaml
    with:
      aws_account_id: ${{ vars.aws_account_id }}
      aws_region: ${{ vars.aws_region }}
      aws_role_name: ${{ vars.aws_role_name }}
      image_name: test-docker-build-push
      docker_context: tests/docker
      docker_push: false

  test_docker_buildx_push_ecr:
    needs: setup_docker_ecr
    uses: ./.github/workflows/docker-buildx-push-ecr.yaml
    with:
      aws_account_id: ${{ vars.aws_account_id }}
      aws_region: ${{ vars.aws_region }}
      aws_role_name: ${{ vars.aws_role_name }}
      image_name: test-docker-buildx-push
      docker_context: tests/docker-multi-arch
      docker_push: true # required to validate the ECR manifest
      docker_platforms: "linux/amd64,linux/arm64"

  test_docker_build:
    uses: ./.github/workflows/docker-build.yaml
    with:
      image_name: test-docker-build
      docker_context: tests/docker
      artifact_retention_days: 1

  test_docker_build_secrets:
    uses: ./.github/workflows/docker-build-push-ecr.yaml
    secrets:
      docker_secrets: |
        SECRET_TOKEN=${{ secrets.TEST_SECRET_TOKEN }}
    with:
      aws_account_id: ${{ vars.aws_account_id }}
      aws_region: ${{ vars.aws_region }}
      aws_role_name: ${{ vars.aws_role_name }}
      docker_context: tests/docker
      dockerfile_path: tests/docker/secrets.Dockerfile
      docker_push: false

  upload_artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: tests/docker-artifacts/

  # Artifacts
  test_docker_build_push_ecr_artifacts:
    needs: upload_artifact
    uses: ./.github/workflows/docker-build-push-ecr.yaml
    with:
      aws_account_id: ${{ vars.aws_account_id }}
      aws_region: ${{ vars.aws_region }}
      aws_role_name: ${{ vars.aws_role_name }}
      docker_context: tests/docker
      docker_push: false
      artifact_name: docker-artifacts

  ## Cleanups
  ## TODO: enable after tests finished
  # cleanup_docker_ecr:
  #   needs: 
  #     - setup_docker_ecr
  #     - test_docker_buildx_push_ecr
  #   uses: ./.github/workflows/tf-cleanup.yaml
  #   with:
  #     environment: sandbox
  #     tf_dir: tests/terraform/docker-ecr
  #     tf_backend_configs: ""
  #     tf_backend_config_files: tests/terraform/docker-ecr/environments/sandbox.s3.tfbackend
  #     tf_var_files: tests/terraform/docker-ecr/environments/sandbox.tfvars
