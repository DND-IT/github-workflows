name: Test AWS RDS Snapshot and Share

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/_test-aws-rds-snapshot.yaml'
      - '.github/workflows/aws-rds-snapshot.yaml'
  push:
    paths:
      - '.github/workflows/_test-aws-rds-snapshot.yaml'
      - '.github/workflows/aws-rds-snapshot.yaml'

# Workflow to test aws-rds-snapshot workflow
# It will:
#   - trigger the workflow on account A
#   - Share the snapshot with account B
# On Account B:
#   - Will validate that the snapshot is available
# On Account A:
#   - Will cleanup the snapshot
#
# The workflow requires the following variables in your repository:
#
# AWS_ACCOUNT_A_OIDC_ROLE
# AWS_ACCOUNT_A_RDS_IDENTIFIER
# AWS_ACCOUNT_B_ID
# AWS_ACCOUNT_B_OIDC_ROLE

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  account-a-snapshot:
    needs:
      - unwrap-env
    uses: './.github/workflows/aws-rds-snapshot.yaml'
    with:
      source_aws_region: "eu-central-1"
      source_aws_oidc_role_arn: ${{ vars.AWS_ACCOUNT_A_OIDC_ROLE }}
      source_rds_identifier: ${{ vars.AWS_ACCOUNT_A_RDS_IDENTIFIER }}
      source_snapshot_name: "cicd-test-github-workflow"
      share_snapshot_destination_aws_account_id: ${{ vars.AWS_ACCOUNT_B_ID }}
      share_snapshot_retries: 5
      share_snapshot_wait_interval_seconds: 25
      aws_tags: '"Key=Trigger,Value=GithubActions" "Key=Repository,Value=DND-IT/github-workflows"'
  
  check-account-b:
    needs:
      - account-a-snapshot
    name: Check Shared snapshot in Account B
    runs-on: ubuntu-latest
    steps:
      - name: Configure Account B AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ vars.AWS_ACCOUNT_B_OIDC_ROLE }}
          aws-region: "eu-central-1"

      - name: Check Shared snapshots
        run: |
          _SNAPSHOTS=$(
            aws rds describe-db-snapshots \
              --db-instance-identifier "${{  }}" \
              --include-shared \
              --snapshot-type shared
          )
          echo "$_SNAPSHOTS" | jq -r '.DBSnapshots'
          
          # 'jq -e' will exist with non-zero if array is empty
          echo "$_SNAPSHOTS" | jq -er '.DBSnapshots | length == 0'
  
  cleanup-account-a:
    needs:
      - check-account-b
    name: Cleanup Snapshot in Account A
    runs-on: ubuntu-latest
    steps:
      - name: Configure Account A AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ vars.AWS_ACCOUNT_A_OIDC_ROLE }}
          aws-region: "eu-central-1"

      - name: Delete Snapshot
        run: |
          aws rds delete-db-snapshot \
            --db-snapshot-identifier "${{ needs.account-a-snapshot.outputs.snapshot_id }}"
