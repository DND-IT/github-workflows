name: Helm Diff Preview

on:
  workflow_call:
    inputs:
      helm_chart_path:
        description: 'Path to the Helm chart directory'
        type: string
        default: 'deploy/app'
      common_values_path:
        description: 'Path to the common values.yaml file'
        type: string
        default: 'deploy/app/values.yaml'
      environments_path:
        description: 'Path to the directory containing environment-specific values'
        type: string
        default: 'deploy/app/envs'
      output_path:
        description: 'Path to the output directory for diffs'
        type: string
        default: 'output'
      base_branch:
        description: 'Base branch for comparison'
        type: string
        default: ${{ github.event.pull_request.base.ref }}
      helm_release_name:
        description: 'Name to use for the Helm release when templating'
        type: string
        default: 'app'
      helm_repo_url:
        description: 'URL of the Helm repository to add'
        type: string
        default: 'https://dnd-it.github.io/helm-charts'
      helm_repo_name:
        description: 'Name to give to the Helm repository'
        type: string
        default: 'dnd-it'
      debug:
        description: 'Enable debug output'
        type: string
        default: 'false'

env:
  HELM_CHART_PATH: ${{ inputs.helm_chart_path }}
  ENVIRONMENTS_PATH: ${{ inputs.environments_path }}
  COMMON_VALUES_PATH: ${{ inputs.common_values_path }}
  OUTPUT_PATH: ${{ inputs.output_path }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      common_changed: ${{ steps.changed-files.outputs.common_values_any_changed }}
      env_values_changed: ${{ steps.changed-files.outputs.env_values_any_changed }}
      env_values_files: ${{ steps.filter-envs.outputs.env_values_files }}
      env_list: ${{ steps.filter-envs.outputs.env_list }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            common_values:
              - ${{ env.COMMON_VALUES_PATH }}
            env_values:
              - ${{ env.ENVIRONMENTS_PATH }}/**/*.yaml

      - name: Filter changed environments
        id: filter-envs
        env:
          ENV_VALUES_FILES: ${{ steps.changed-files.outputs.env_values_all_changed_files }}
        run: |
          # Get list of all changed env value files
          echo "env_values_files=$ENV_VALUES_FILES" >> $GITHUB_OUTPUT

          # Extract environment names from paths
          ENV_LIST=""
          if [ -n "$ENV_VALUES_FILES" ]; then
            ENV_LIST=$(echo "$ENV_VALUES_FILES" | xargs -n1 dirname | xargs -n1 basename | sort -u | tr '\n' ' ')
          fi

          # If common values changed, we need to check all environments
          if [ "${{ steps.changed-files.outputs.common_values_any_changed }}" == "true" ]; then
            # Get all environments by listing directories
            ALL_ENVS=$(find ${{ env.ENVIRONMENTS_PATH }} -maxdepth 1 -type d | xargs -n1 basename | grep -v "^${ENVIRONMENTS_PATH##*/}$" | tr '\n' ' ')
            if [ -n "$ALL_ENVS" ]; then
              ENV_LIST="$ALL_ENVS"
            fi
          fi

          echo "env_list=$ENV_LIST" >> $GITHUB_OUTPUT
          echo "Environments to diff: $ENV_LIST"

      - name: Show debug info
        if: inputs.debug == 'true'
        run: |
          echo "Common values changed: ${{ steps.changed-files.outputs.common_values_any_changed }}"
          echo "Environment values changed: ${{ steps.changed-files.outputs.env_values_any_changed }}"
          echo "Changed environment files: ${{ steps.changed-files.outputs.env_values_all_changed_files }}"
          echo "Environments to check: ${{ steps.filter-envs.outputs.env_list }}"

  diff:
    needs: detect-changes
    if: needs.detect-changes.outputs.common_changed == 'true' || needs.detect-changes.outputs.env_values_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Debug outputs
        run: |
          echo "Common values changed: ${{ needs.detect-changes.outputs.common_changed }}"
          echo "Environment values changed: ${{ needs.detect-changes.outputs.env_values_changed }}"
          echo "Environments to check: ${{ needs.detect-changes.outputs.env_list }}"

      - uses: actions/checkout@v4
        with:
          path: pull-request

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_branch }}
          path: target-branch

      - name: Set up Helm
        run: |
          helm repo add ${{ inputs.helm_repo_name }} ${{ inputs.helm_repo_url }}

      - name: Process environments
        id: process-envs
        run: |
          mkdir -p ${{ env.OUTPUT_PATH }}
          echo "### Helm Deployment Changes" > ${{ env.OUTPUT_PATH }}/all_diffs.md
          echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md

          HAS_CHANGES=false

          for ENV in ${{ needs.detect-changes.outputs.env_list }}; do
            echo "Processing environment: $ENV"

            # Check if environment directory exists in both branches
            if [ ! -d "pull-request/${{ env.ENVIRONMENTS_PATH }}/$ENV" ] || [ ! -d "target-branch/${{ env.ENVIRONMENTS_PATH }}/$ENV" ]; then
              echo "Warning: Environment directory $ENV does not exist in one or both branches, skipping"
              continue
            fi

            # Generate rendered output for PR branch with environment values
            helm dependency build pull-request/${{ env.HELM_CHART_PATH}}
            helm template release-name pull-request/${{ env.HELM_CHART_PATH}} \
              -f pull-request/${{ env.ENVIRONMENTS_PATH }}/$ENV/values.yaml \
              > pull-request/rendered-$ENV.yaml

            # Generate rendered output for target branch with environment values
            helm dependency build target-branch/${{ env.HELM_CHART_PATH}}
            helm template release-name target-branch/${{ env.HELM_CHART_PATH}} \
              -f target-branch/${{ env.ENVIRONMENTS_PATH }}/$ENV/values.yaml \
              > target-branch/rendered-$ENV.yaml

            # Generate diff for this environment
            diff -u target-branch/rendered-$ENV.yaml pull-request/rendered-$ENV.yaml > ${{ env.OUTPUT_PATH }}/diff-$ENV.txt || true

            # Check if diff exists and add to summary
            if [ -s ${{ env.OUTPUT_PATH }}/diff-$ENV.txt ]; then
              HAS_CHANGES=true
              echo "## Environment: $ENV" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "Changes detected for $ENV environment:" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md

              # Use proper diff formatting to ensure GitHub renders colors
              echo '```diff' >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              grep -v "^---" ${{ env.OUTPUT_PATH }}/diff-$ENV.txt | grep -v "^+++" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo '```' >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md

              echo "<details><summary>View full diff for $ENV</summary>" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo '```diff' >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              cat ${{ env.OUTPUT_PATH }}/diff-$ENV.txt >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo '```' >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "</details>" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
            else
              echo "## Environment: $ENV" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "No changes detected for $ENV environment" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
              echo "" >> ${{ env.OUTPUT_PATH }}/all_diffs.md
            fi
          done

          echo "has_changes=$HAS_CHANGES" >> $GITHUB_OUTPUT

      - name: Post diff as comment
        if: steps.process-envs.outputs.has_changes == 'true'
        run: |
          gh pr comment ${{ github.event.number }} --repo ${{ github.repository }} --body-file ${{ env.OUTPUT_PATH }}/all_diffs.md --edit-last || \
          gh pr comment ${{ github.event.number }} --repo ${{ github.repository }} --body-file ${{ env.OUTPUT_PATH }}/all_diffs.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
