{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Github Actions is a powerful tool for automating workflows in your repository. This repository contains a collection of GitHub workflows that are reusable across projects.</p> <p>Reusable workflows will not suit all projects, but they can be a good starting point for projects that have similar requirements.</p> <p>The state of these workflows are considered to be in alpha, and are subject to change to suit the needs of projects managed by DAI.</p>"},{"location":"#github-actions-reusable-workflows","title":"Github Actions - Reusable Workflows","text":"<p>(Official Docs)[https://docs.github.com/en/actions/sharing-automations/reusing-workflows]</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Terraform orchestration</li> <li>Docker image management</li> <li>Lambda builds</li> <li>AWS secrets cloning across AWS accounts.</li> </ul>"},{"location":"#goals","title":"Goals","text":"<p>The main goal is to have a single source of truth for all standard workflows, so that they can be easily maintained.</p>"},{"location":"#when-to-use-reusable-workflows","title":"When to use reusable workflows","text":"<ul> <li>Terraform orchestration</li> <li>Simple docker workflows</li> <li>Running repeatable tasks across multiple projects e.g. Ad hoc scripts</li> </ul>"},{"location":"#when-not-to-use-reusable-workflows","title":"When not to use reusable workflows","text":"<ul> <li>When you need to customize the workflow for your specific use case.</li> <li>Most of the time application builds and tests are unique to the project and should be maintained in the project repository.</li> <li>Secrets are required to be stored in the project repository. (We recommend using AWS Secrets Manager for workflow secrets)</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Create a <code>.github/workflows</code> directory in your repository and create workflows that reference the workflows in this repository.</p> <pre><code>name: My Workflow\non: push\njobs:\n  my-job:\n    uses: &lt;org&gt;/&lt;repo&gt;/.github/workflows/&lt;workflow-name&gt;.yaml@&lt;ref&gt;\n    with:\n      my-input: my-value\n</code></pre> <p>For more complete examples see the examples page.</p>"},{"location":"docker-build-push/","title":"Quick start guide","text":"<p>The <code>docker-build-push-ecr.yaml</code> is a GitHub Action workflow designed to automate the process of building a Docker image and pushing it to Amazon ECR. It's triggered on a <code>workflow_call</code> event and accepts several inputs.</p>"},{"location":"docker-build-push/#inputs","title":"Inputs","text":"Input Description Required Default environment The environment to run the build in Yes aws_account_id The AWS Account ID Yes aws_region The AWS Region Yes aws_role_name The AWS Role Name Yes aws_oidc_role_arn The AWS OIDC IAM role to assume Yes image_name The name of the Docker image to build No The repository name image_tag The tag of the Docker image to build Yes docker_context The path to the build context No . dockerfile_path The path to the Dockerfile No {docker_context}/Dockerfile docker_push Whether to push the image to ECR No true artifact_name Artifact name to be downloaded No artifact_path Artifact target path No"},{"location":"docker-build-push/#examples","title":"Examples","text":"<pre><code>on: [push, pull_request]\njobs:\n  docker_build_push_ecr:\n    uses: ./.github/workflows/docker-build-push-ecr.yaml\n    with:\n      environment: 'production'\n      aws_region: 'us-west-2'\n      aws_oidc_role_arn: 'arn:aws:iam::123456789012:role/my-aws-role'\n      image_name: 'my-docker-image'\n      image_tag: 'latest'\n      docker_context: '.'\n      dockerfile_path: 'Dockerfile'\n      docker_push: 'true'\n</code></pre>"},{"location":"docker-build-push/#faqs","title":"FAQs","text":"<p>Q: How do I specify the AWS credentials?</p> <p>A: The AWS credentials are specified using the aws_account_id, aws_region, aws_role_name, and aws_oidc_role_arn inputs.</p> <p>Q: How do I specify the Docker image name and tag?</p> <p>A: The Docker image name and tag are specified using the image_name and image_tag inputs. By default, the image name is the repository name.</p> <p>Q: How do I specify the build context and Dockerfile path?</p> <p>A: The build context and Dockerfile path are specified using the docker_context and dockerfile_path inputs. By default, the build context is . and the Dockerfile path is {docker_context}/Dockerfile.</p> <p>Q: How do I control whether the image is pushed to ECR?</p> <p>A: Whether the image is pushed to ECR is controlled using the docker_push input. By default, it is set to true.</p> <p>Q: Can I only build or only push ?</p> <p>A: Yes you can call separately the workflows docker-build.yaml and docker-push-ecr.yaml. Please refer to each individual workflow for informations about inputs.</p> <p>Q: Can I pass files and folders from other jobs?</p> <p>A: Yes, you can upload them as artifacts and have the docker-build-push-ecr.yaml to download them via <code>artifact_path</code> and <code>artifact_name</code>. Example <code>DND-IT/disco</code> PR</p>"},{"location":"faq/","title":"FAQ","text":"<p>tba</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#getting-started-with-reusable-workflows","title":"Getting started with Reusable Workflows","text":"<p>To get started with using reusable workflows in your repository, follow these steps:</p> <ol> <li> <p>Create a <code>.github/workflows</code> directory in your repository if it doesn't already exist.</p> </li> <li> <p>Copy an example workflow file from the reusable workflows repository into your <code>.github/workflows</code> directory. You can find the workflow example files in the <code>docs/examples/</code> folder of this repository.</p> </li> <li> <p>Open the workflow file you just copied and customize it according to your needs. Each workflow file contains a set of jobs that define the tasks to be executed.</p> </li> <li> <p>Make sure to set the required inputs for the workflow. These inputs are defined in the workflow file and can be customized to match your specific requirements. For example, you might need to provide values for environment variables, AWS credentials, or Docker image details.</p> </li> <li> <p>Save the modified workflow file.</p> </li> <li> <p>Commit and push the changes to your repository.</p> </li> <li> <p>The workflow will now be triggered based on the specified events. For example, if you have configured the workflow to run on every push event, it will automatically start whenever you push changes to your repository.</p> </li> </ol> <p>That's it! You have successfully set up and customized a reusable workflow in your repository. Now you can benefit from the predefined tasks and automation provided by the workflow to streamline your development process.</p>"},{"location":"github-release/","title":"Quick Start Guide","text":"<p>This GitHub Action is designed to automate the process of creating a new release on push to the main branch. It's triggered on a pull_request closed event to the main branch and does not require any inputs.</p> <p>However, it requires specific naming convention for the commit message in order to release the right version.</p> <p>The release automatically increases the patch, minor or major version, but also tags the MAJOR and MAJOR.MINOR versions to point to the latest commit.</p> <p>The workflow pays attention to the title of the latest commit and check what it starts with. Which means that when squashing and merging your PR, you need to add the proper key words.</p> <p>The options are: 1. \"fix: Some comment\" -&gt; will increment the patch version x.x.PATCH+1 2. \"feat: Some comment\" -&gt; will increment the minor version x.MINOR+1.0 3. \"feat!: Some comment\" -&gt; will increment the major version MAJOR+1.0.0</p>"},{"location":"github-release/#inputs","title":"Inputs","text":"<p>No inputs.</p>"},{"location":"github-release/#examples","title":"Examples","text":"<ul> <li> <p>we currently are at version v1.1.1. . Squashing/merging a PR with a \"fix:\" prefix will increase the patch version (-&gt; v1.1.2), and also will renew tagging so that workflows already calling @v1 or @v1.1 would target the new release v1.1.2.</p> </li> <li> <p>we currently are at version v1.1.9. Squashing/merging a PR with a \"feat:\" prefix will increase the minor version (-&gt; v1.2.0), and also will renew tagging so that workflows already calling @v1 or @v1.2 would target the new release v1.2.0.</p> </li> </ul>"},{"location":"github-release/#faqs","title":"FAQs","text":"<p>Q: How is the version number determined?</p> <p>A: The version number is determined by fetching all tags, sorting them, and retrieving the latest version. If no tags are found, it defaults to v0.0.1.</p> <p>Q: How are the release notes generated?</p> <p>A: The release notes are automatically generated by the <code>softprops/action-gh-release@v1</code> action.</p>"},{"location":"lambda-build-node/","title":"Quick start guide","text":"<p>The <code>lambda-build-node.yaml</code> is a GitHub Action workflow designed to automate the process of building a Node.js AWS Lambda function. It's triggered on a <code>workflow_call</code> event and accepts several inputs.</p>"},{"location":"lambda-build-node/#inputs","title":"Inputs","text":"Input Description Required Default <code>node_version</code> The Node.js version to use No 20 <code>source_dir</code> The directory where the Lambda source code is located No src <code>build_dir</code> The directory where the Lambda build artifacts are located No dist <code>artifact_retention_days</code> Number of days to retain the artifact No 5"},{"location":"lambda-build-node/#examples","title":"Examples","text":"<pre><code>on: [push, pull_request]\njobs:\n  build:\n    uses: ./.github/workflows/lambda-build-node.yaml\n    with:\n      node_version: \"20\"\n      source_dir: \"src\"\n      build_dir: \"dist\"\n      artifact_retention_days: 5\n</code></pre>"},{"location":"lambda-build-node/#faqs","title":"FAQs","text":"<p>Q: How do I specify the Node.js version?</p> <p>A: The Node.js version is specified using the node_version input. By default, it uses version 20.</p> <p>Q: How do I specify the source directory?</p> <p>A: The source directory is specified using the source_dir input. By default, it is set to src.</p> <p>Q: How do I specify the build directory?</p> <p>A: The build directory is specified using the build_dir input. By default, it is set to dist.</p> <p>Q: How do I specify the artifact retention days?</p> <p>A: The number of days to retain the artifact is specified using the artifact_retention_days input. By default, it is set to 5 days.</p>"},{"location":"terraform/","title":"Quick start guide","text":"<p>dflook actions are an externally maintained set of actions that are used in the workflows. The decision to use dflook actions was made to reduce the maintenance burden of the workflows and reuse actions that are well tested and reliable.</p>"},{"location":"terraform/#inputs-for-dflook-workflows","title":"Inputs for dflook workflows","text":"<p>Each reusable workflow should contain related tasks to reduce any duplication of tasks across workflows. eg. <code>plan</code> runs validate and format before the plan to catch any issues early and not have to rely on creating extra workflows to run these tasks. For an updated list of inputs, see directly the dflook repository.</p> <p>Assumptions when using dflook actions:</p> <ul> <li>the environment input is set for all actions.</li> <li>inputs are either passed directly to the action or are set as environment variables.</li> </ul>"},{"location":"terraform/#examples","title":"Examples","text":"<pre><code>on:\n  pull_request:\n    branches:\n      - main\n    paths:\n      - '.github/workflows/_test-tf.yaml'\n      - '.github/workflows/tf-*.yaml'\n      - 'tests/terraform/**'\n  push:\n    branches:\n      - main\n\njobs:\n  test_tf_plan:\n    uses: ./.github/workflows/tf-plan.yaml\n    with:\n      environment: sandbox\n\n  test_tf_apply:\n    needs: test_tf_plan\n    uses: ./.github/workflows/tf-apply.yaml\n    with:\n      environment: sandbox\n      tf_pre_run:\n        curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" &amp;&amp; unzip -qq awscliv2.zip &amp;&amp; ./aws/install\n\n  test_tf_feature:\n    uses: ./.github/workflows/tf-feature.yaml\n    with:\n      environment: sandbox\n\n  test_tf_cleanup:\n    needs: test_tf_feature\n    uses: ./.github/workflows/tf-cleanup.yaml\n    with:\n      environment: sandbox\n</code></pre>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/docker-terraform/","title":"Build Docker and Deploy Terraform","text":"<pre><code>name: Build and Deploy\n\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n  workflow_dispatch:\n\npermissions:\n  id-token: write\n  contents: read\n  pull-requests: write\n\njobs:\n  docker_build_artifact:\n    if: github.event_name == 'pull_request'\n    uses: tx-pts-dai/github-workflows/.github/workflows/docker-build.yaml@v1\n\n  docker_push_ecr:\n    if: github.event_name == 'push'\n    strategy:\n      fail-fast: true\n      matrix:\n        stack: [app]\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/docker-push-ecr.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.environment }}\n\n  plan:\n    if: github.event_name == 'pull_request'\n    strategy:\n      fail-fast: false\n      matrix:\n        stack: [app]\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.environment }}\n\n  apply:\n    if: github.ref_name == github.event.repository.default_branch &amp;&amp; (github.event_name == 'push' || github.event_name == 'workflow_dispatch')\n    strategy:\n      fail-fast: true\n      max-parallel: 1\n      matrix:\n        stack: [app]\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.environment }}\n</code></pre>"},{"location":"examples/multiple-releases/","title":"Terraform Stack with Multiple Releases","text":"<pre><code>name: Deployment\n\non:\n  push:\n    branches: [main]\n    paths:\n      - platform/**\n  pull_request:\n    branches: [main]\n    paths:\n      - platform/**\n  workflow_dispatch:\n\npermissions:\n  id-token: write\n  contents: read\n  pull-requests: write\n\njobs:\n  plan:\n    if: github.event_name == 'pull_request'\n    strategy:\n      fail-fast: false\n      matrix:\n        stack: [\"platform\"]\n        deployment: [\"v0\", \"v1\"]\n        environment: [\"dev\", \"prod\"]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.deployment}}-${{ matrix.environment }}\n\n  apply:\n    if: github.ref_name == github.event.repository.default_branch &amp;&amp; (github.event_name == 'push' || github.event_name == 'workflow_dispatch')\n    strategy:\n      fail-fast: true\n      max-parallel: 1\n      matrix:\n        stack: [\"platform\"]\n        deployment: [\"v0\", \"v1\"]\n        environment: [\"dev\", \"prod\"]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.deployment}}-${{ matrix.environment }}\n</code></pre>"},{"location":"examples/terraform-multiple/","title":"Multiple Terraform Stacks","text":"<pre><code>name: Deployment\n\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n  workflow_dispatch:\n\npermissions:\n  id-token: write\n  contents: read\n  pull-requests: write\n\njobs:\n  plan:\n    if: github.event_name == 'pull_request'\n    strategy:\n      fail-fast: false\n      matrix:\n        stack: [infra, app]\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.environment }}\n\n  apply:\n    if: github.ref_name == github.event.repository.default_branch &amp;&amp; (github.event_name == 'push' || github.event_name == 'workflow_dispatch')\n    strategy:\n      fail-fast: true\n      max-parallel: 1\n      matrix:\n        stack: [infra, app]\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1\n    with:\n      environment: ${{ matrix.stack }}-${{ matrix.environment }}\n</code></pre>"},{"location":"examples/terraform-single/","title":"Single Terraform Stack","text":"<pre><code>name: Deployment\n\non:\n  push:\n    branches: [main]\n\n  pull_request:\n    branches: [main]\n\n  workflow_dispatch:\n\npermissions:\n  id-token: write\n  contents: read\n  pull-requests: write\n\njobs:\n  plan:\n    if: github.event_name == 'pull_request'\n    strategy:\n      fail-fast: false\n      matrix:\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1\n    with:\n      environment: ${{ matrix.environment }}\n\n  apply:\n    if: github.ref_name == github.event.repository.default_branch &amp;&amp; (github.event_name == 'push' || github.event_name == 'workflow_dispatch')\n    strategy:\n      fail-fast: true\n      max-parallel: 1\n      matrix:\n        environment: [dev, int, prod]\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1\n    with:\n      environment: ${{ matrix.environment }}\n</code></pre>"},{"location":"workflows/","title":"Workflows","text":""},{"location":"workflows/aws-secrets-copy/","title":"AWS Secrets Copy","text":""},{"location":"workflows/aws-secrets-copy/#aws-secrets-copy","title":"AWS Secrets Copy","text":""},{"location":"workflows/aws-secrets-copy/#description","title":"Description","text":"<p>aws-secrets-copy.yaml is a GitHub Action Job designed to copy an AWS secret between AWS accounts.</p>"},{"location":"workflows/aws-secrets-copy/#inputs","title":"Inputs","text":"name description type required default <code>source_aws_region</code> <p>AWS region</p> <code>string</code> <code>true</code> <code>\"\"</code> <code>source_aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>true</code> <code>\"\"</code> <code>source_secret_name</code> <p>AWS secret name to copy from</p> <code>string</code> <code>true</code> <code>\"\"</code> <code>destination_aws_region</code> <p>AWS region</p> <code>string</code> <code>true</code> <code>\"\"</code> <code>destination_aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>true</code> <code>\"\"</code> <code>destination_secret_name</code> <p>AWS secret name to copy to (default to the source secret name)</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>secret_description</code> <p>The description to attach to the AWS secret (default to the description of the source secret's description)</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_tags</code> <p>Tags to put on the created secret in the form '[{\"Key\":\"key1\", \"Value\":\"value1\"},{\"Key\":\"key2\", \"Value\":\"value2\"}] (default to no tags)'</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/aws-secrets-copy/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/aws-secrets-copy.yaml@v1\n    with:\n      source_aws_region:\n      # AWS region\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n\n      source_aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n\n      source_secret_name:\n      # AWS secret name to copy from\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n\n      destination_aws_region:\n      # AWS region\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n\n      destination_aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n\n      destination_secret_name:\n      # AWS secret name to copy to (default to the source secret name)\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      secret_description:\n      # The description to attach to the AWS secret (default to the description of the source secret's description)\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_tags:\n      # Tags to put on the created secret in the form '[{\"Key\":\"key1\", \"Value\":\"value1\"},{\"Key\":\"key2\", \"Value\":\"value2\"}] (default to no tags)'\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/aws-secrets-copy/#examples","title":"Examples","text":"<pre><code>on: [push, pull_request]\njobs:\n  copy_secret:\n    uses: ./.github/workflows/aws-secrets-copy.yaml\n    with:\n      source_aws_region: 'us-west-2'\n      source_aws_oidc_role_arn: 'arn:aws:iam::123456789012:role/my-aws-role'\n      source_secret_name: ' my-aws-secret'\n      destination_aws_region: 'us-west-1'\n      destination_aws_oidc_role_arn: 'arn:aws:iam::012345678901:role/my-aws-role'\n</code></pre>"},{"location":"workflows/aws-secrets-copy/#faqs","title":"FAQs","text":"<p>Q: What happen if the destination secret already exists ?</p> <p>A: The destination AWS secret value will be updated to the value of the source secret</p>"},{"location":"workflows/aws-secrets-copy/#workflow","title":"Workflow","text":"<p>There is a validation workflow triggered when a pull request from a feature branch to <code>main</code> is created. The workflow will create some temporary AWS secrets to validate that different use cases of the workflow will work:</p> <ul> <li>Copy of a secret to non existing secret</li> <li>Copy of a secret to an existing secret</li> <li>Copy of a secret with different input parameters</li> </ul> <p>At the end, all secrets are deleted</p>"},{"location":"workflows/docker-build-push-ecr/","title":"Docker Build and Push to ECR","text":""},{"location":"workflows/docker-build-push-ecr/#docker-build-and-push-to-ecr","title":"Docker Build and Push to ECR","text":""},{"location":"workflows/docker-build-push-ecr/#description","title":"Description","text":""},{"location":"workflows/docker-build-push-ecr/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to run the build in</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>AWS Account ID</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>AWS Region</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>AWS Role Name</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>image_name</code> <p>Name of the Docker image to build</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>image_tag</code> <p>Tag of the Docker image to build</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>docker_context</code> <p>Path to the build context</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>dockerfile_path</code> <p>Path to the Dockerfile. If not defined, will default to {docker_context}/Dockerfile</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>docker_push</code> <p>Push Image to ECR</p> <code>boolean</code> <code>false</code> <code>true</code> <code>docker_target</code> <p>Build target</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>artifact_name</code> <p>Artifact name to be downloaded before building</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>artifact_path</code> <p>Artifact target path</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/docker-build-push-ecr/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/docker-build-push-ecr.yaml@v1\n    with:\n      environment:\n      # Environment to run the build in\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # AWS Account ID\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # AWS Region\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # AWS Role Name\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      image_name:\n      # Name of the Docker image to build\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      image_tag:\n      # Tag of the Docker image to build\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      docker_context:\n      # Path to the build context\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      dockerfile_path:\n      # Path to the Dockerfile. If not defined, will default to {docker_context}/Dockerfile\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      docker_push:\n      # Push Image to ECR\n      #\n      # Type: boolean\n      # Required: false\n      # Default: true\n\n      docker_target:\n      # Build target\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      artifact_name:\n      # Artifact name to be downloaded before building\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      artifact_path:\n      # Artifact target path\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/docker-build-push-ecr/#example","title":"Example","text":""},{"location":"workflows/docker-build-push-ecr/#faq","title":"FAQ","text":""},{"location":"workflows/docker-build/","title":"Docker Build","text":""},{"location":"workflows/docker-build/#docker-build","title":"Docker Build","text":""},{"location":"workflows/docker-build/#description","title":"Description","text":""},{"location":"workflows/docker-build/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>image_name</code> <p>Name of the Docker image to build</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>docker_context</code> <p>Path to the build context</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>artifact_retention_days</code> <p>Number of days to retain the artifact</p> <code>number</code> <code>false</code> <code>\"\"</code> <code>docker_target</code> <p>Build target</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/docker-build/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/docker-build.yaml@v1\n    with:\n      environment:\n      # Environment to deploy\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      image_name:\n      # Name of the Docker image to build\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      docker_context:\n      # Path to the build context\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      artifact_retention_days:\n      # Number of days to retain the artifact\n      #\n      # Type: number\n      # Required: false\n      # Default: \"\"\n\n      docker_target:\n      # Build target\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/docker-build/#example","title":"Example","text":""},{"location":"workflows/docker-build/#faq","title":"FAQ","text":""},{"location":"workflows/docker-push-ecr/","title":"Docker Push to ECR","text":""},{"location":"workflows/docker-push-ecr/#docker-push-to-ecr","title":"Docker Push to ECR","text":""},{"location":"workflows/docker-push-ecr/#description","title":"Description","text":""},{"location":"workflows/docker-push-ecr/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>AWS Account ID</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>AWS Region</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>AWS Role Name</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>image_name</code> <p>Name of the Docker image to build</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>image_tag</code> <p>Tag of the Docker image to build</p> <code>string</code> <code>false</code> <code>${{ github.sha }}</code>"},{"location":"workflows/docker-push-ecr/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/docker-push-ecr.yaml@v1\n    with:\n      environment:\n      # Environment to deploy\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # AWS Account ID\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # AWS Region\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # AWS Role Name\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      image_name:\n      # Name of the Docker image to build\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      image_tag:\n      # Tag of the Docker image to build\n      #\n      # Type: string\n      # Required: false\n      # Default: ${{ github.sha }}\n</code></pre>"},{"location":"workflows/docker-push-ecr/#example","title":"Example","text":""},{"location":"workflows/docker-push-ecr/#faq","title":"FAQ","text":""},{"location":"workflows/gh-release-on-main/","title":"Github Conventional Commit Release","text":""},{"location":"workflows/gh-release-on-main/#github-conventional-commit-release","title":"Github Conventional Commit Release","text":""},{"location":"workflows/gh-release-on-main/#description","title":"Description","text":""},{"location":"workflows/gh-release-on-main/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/gh-release-on-main.yaml@v1\n</code></pre>"},{"location":"workflows/gh-release-on-main/#example","title":"Example","text":""},{"location":"workflows/gh-release-on-main/#faq","title":"FAQ","text":""},{"location":"workflows/gh-release/","title":"Github Release","text":""},{"location":"workflows/gh-release/#github-release","title":"Github Release","text":""},{"location":"workflows/gh-release/#description","title":"Description","text":""},{"location":"workflows/gh-release/#inputs","title":"Inputs","text":"name description type required default <code>tag</code> <p>The tag to release</p> <code>string</code> <code>true</code> <code>\"\"</code>"},{"location":"workflows/gh-release/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/gh-release.yaml@v1\n    with:\n      tag:\n      # The tag to release\n      #\n      # Type: string\n      # Required: true\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/gh-release/#example","title":"Example","text":""},{"location":"workflows/gh-release/#faq","title":"FAQ","text":""},{"location":"workflows/lambda-build-node/","title":"Build Lambda Layer","text":""},{"location":"workflows/lambda-build-node/#build-lambda-layer","title":"Build Lambda Layer","text":""},{"location":"workflows/lambda-build-node/#description","title":"Description","text":""},{"location":"workflows/lambda-build-node/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>node_version</code> <p>The Node.js version to use</p> <code>string</code> <code>false</code> <code>20</code> <code>source_dir</code> <p>The directory where the Lambda source code is located</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>build_dir</code> <p>The directory where the Lambda build artifacts are located</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>artifact_retention_days</code> <p>Number of days to retain the artifact</p> <code>number</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/lambda-build-node/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/lambda-build-node.yaml@v1\n    with:\n      environment:\n      # Environment to deploy.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      node_version:\n      # The Node.js version to use\n      #\n      # Type: string\n      # Required: false\n      # Default: 20\n\n      source_dir:\n      # The directory where the Lambda source code is located\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      build_dir:\n      # The directory where the Lambda build artifacts are located\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      artifact_retention_days:\n      # Number of days to retain the artifact\n      #\n      # Type: number\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/lambda-build-node/#example","title":"Example","text":""},{"location":"workflows/lambda-build-node/#faq","title":"FAQ","text":""},{"location":"workflows/tf-apply/","title":"Terraform Apply","text":""},{"location":"workflows/tf-apply/#terraform-apply","title":"Terraform Apply","text":""},{"location":"workflows/tf-apply/#description","title":"Description","text":""},{"location":"workflows/tf-apply/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>The AWS account ID.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>The AWS region.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>The name of the role to assume with OIDC.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>gh_artifact_path</code> <p>Path to download artifacts to. If not set, no artifacts will be downloaded.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_dir</code> <p>Path to the Terraform root module to apply.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_configs</code> <p>ist of Terraform backend config values, one per line.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_config_files</code> <p>List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_var_files</code> <p>List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_vars</code> <p>Variables to set for the Terraform plan. This should be valid Terraform syntax.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_pre_run</code> <p>Command to run before Terraform is executed.</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/tf-apply/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1\n    with:\n      environment:\n      # Environment to deploy.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # The AWS account ID.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # The AWS region.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # The name of the role to assume with OIDC.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      gh_artifact_path:\n      # Path to download artifacts to. If not set, no artifacts will be downloaded.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_dir:\n      # Path to the Terraform root module to apply.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_configs:\n      # ist of Terraform backend config values, one per line.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_config_files:\n      # List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_var_files:\n      # List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_vars:\n      # Variables to set for the Terraform plan. This should be valid Terraform syntax.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_pre_run:\n      # Command to run before Terraform is executed.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/tf-apply/#example","title":"Example","text":""},{"location":"workflows/tf-apply/#faq","title":"FAQ","text":""},{"location":"workflows/tf-cleanup/","title":"Terraform Preview Cleanup","text":""},{"location":"workflows/tf-cleanup/#terraform-preview-cleanup","title":"Terraform Preview Cleanup","text":""},{"location":"workflows/tf-cleanup/#description","title":"Description","text":""},{"location":"workflows/tf-cleanup/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>The AWS account ID.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>The AWS region.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>The name of the role to assume with OIDC.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_dir</code> <p>Terraform directory</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_configs</code> <p>Terraform backend config cli arguments</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_config_files</code> <p>List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_var_files</code> <p>New line separated list of terraform variable files</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_vars</code> <p>New line separated list of terraform variables</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_pre_run</code> <p>Command to run before Terraform is executed.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_workspace</code> <p>Terraform workspace</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/tf-cleanup/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-cleanup.yaml@v1\n    with:\n      environment:\n      # Environment to deploy\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # The AWS account ID.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # The AWS region.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # The name of the role to assume with OIDC.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_dir:\n      # Terraform directory\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_configs:\n      # Terraform backend config cli arguments\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_config_files:\n      # List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_var_files:\n      # New line separated list of terraform variable files\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_vars:\n      # New line separated list of terraform variables\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_pre_run:\n      # Command to run before Terraform is executed.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_workspace:\n      # Terraform workspace\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/tf-cleanup/#example","title":"Example","text":""},{"location":"workflows/tf-cleanup/#faq","title":"FAQ","text":""},{"location":"workflows/tf-destroy/","title":"Terraform Destroy","text":""},{"location":"workflows/tf-destroy/#terraform-destroy","title":"Terraform Destroy","text":""},{"location":"workflows/tf-destroy/#description","title":"Description","text":""},{"location":"workflows/tf-destroy/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>The AWS account ID.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>The AWS region.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>The name of the role to assume with OIDC.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_dir</code> <p>Path to the Terraform root module to apply.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_configs</code> <p>List of Terraform backend config values, one per line.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_config_files</code> <p>List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_var_files</code> <p>List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_vars</code> <p>Variables to set for the Terraform plan. This should be valid Terraform syntax.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_pre_run</code> <p>Command to run before Terraform is executed.</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/tf-destroy/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-destroy.yaml@v1\n    with:\n      environment:\n      # Environment to deploy.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # The AWS account ID.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # The AWS region.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # The name of the role to assume with OIDC.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_dir:\n      # Path to the Terraform root module to apply.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_configs:\n      # List of Terraform backend config values, one per line.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_config_files:\n      # List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_var_files:\n      # List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_vars:\n      # Variables to set for the Terraform plan. This should be valid Terraform syntax.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_pre_run:\n      # Command to run before Terraform is executed.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/tf-destroy/#example","title":"Example","text":""},{"location":"workflows/tf-destroy/#faq","title":"FAQ","text":""},{"location":"workflows/tf-feature/","title":"Terraform Preview Deployment","text":""},{"location":"workflows/tf-feature/#terraform-preview-deployment","title":"Terraform Preview Deployment","text":""},{"location":"workflows/tf-feature/#description","title":"Description","text":""},{"location":"workflows/tf-feature/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>AWS region</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>The AWS account ID.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>gh_artifact_path</code> <p>Path to download artifacts to. If not set, no artifacts will be downloaded.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_dir</code> <p>Terraform directory</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_configs</code> <p>Terraform backend config cli arguments</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_config_files</code> <p>List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_var_files</code> <p>New line separated list of terraform variable files</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_vars</code> <p>New line separated list of terraform variables</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_pre_run</code> <p>Command to run before Terraform is executed.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_workspace</code> <p>Terraform workspace</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/tf-feature/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-feature.yaml@v1\n    with:\n      environment:\n      # Environment to deploy\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # AWS region\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # The AWS account ID.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      gh_artifact_path:\n      # Path to download artifacts to. If not set, no artifacts will be downloaded.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_dir:\n      # Terraform directory\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_configs:\n      # Terraform backend config cli arguments\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_config_files:\n      # List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_var_files:\n      # New line separated list of terraform variable files\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_vars:\n      # New line separated list of terraform variables\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_pre_run:\n      # Command to run before Terraform is executed.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_workspace:\n      # Terraform workspace\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/tf-feature/#example","title":"Example","text":""},{"location":"workflows/tf-feature/#faq","title":"FAQ","text":""},{"location":"workflows/tf-plan/","title":"Terraform Plan","text":""},{"location":"workflows/tf-plan/#terraform-plan","title":"Terraform Plan","text":""},{"location":"workflows/tf-plan/#description","title":"Description","text":""},{"location":"workflows/tf-plan/#inputs","title":"Inputs","text":"name description type required default <code>environment</code> <p>Environment to deploy.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_account_id</code> <p>The AWS account ID.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_region</code> <p>The AWS region.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_role_name</code> <p>The name of the role to assume with OIDC.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>aws_oidc_role_arn</code> <p>AWS OIDC IAM role to assume</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>gh_artifact_path</code> <p>Path to download artifacts to. If not set, no artifacts will be downloaded.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>gh_comment</code> <p>Whether to post a comment on the PR with the Terraform plan</p> <code>string</code> <code>false</code> <code>changes-only</code> <code>tf_dir</code> <p>Path to the Terraform root module to apply.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_configs</code> <p>List of Terraform backend config values, one per line.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_backend_config_files</code> <p>List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_var_files</code> <p>List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_vars</code> <p>Variables to set for the Terraform plan. This should be valid Terraform syntax.</p> <code>string</code> <code>false</code> <code>\"\"</code> <code>tf_pre_run</code> <p>Command to run before Terraform is executed.</p> <code>string</code> <code>false</code> <code>\"\"</code>"},{"location":"workflows/tf-plan/#usage","title":"Usage","text":"<pre><code>jobs:\n  job1:\n    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1\n    with:\n      environment:\n      # Environment to deploy.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_account_id:\n      # The AWS account ID.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_region:\n      # The AWS region.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_role_name:\n      # The name of the role to assume with OIDC.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      aws_oidc_role_arn:\n      # AWS OIDC IAM role to assume\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      gh_artifact_path:\n      # Path to download artifacts to. If not set, no artifacts will be downloaded.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      gh_comment:\n      # Whether to post a comment on the PR with the Terraform plan\n      #\n      # Type: string\n      # Required: false\n      # Default: changes-only\n\n      tf_dir:\n      # Path to the Terraform root module to apply.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_configs:\n      # List of Terraform backend config values, one per line.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_backend_config_files:\n      # List of Terraform backend config files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_var_files:\n      # List of tfvars files to use, one per line. Paths should be relative to the GitHub Actions workspace.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_vars:\n      # Variables to set for the Terraform plan. This should be valid Terraform syntax.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n\n      tf_pre_run:\n      # Command to run before Terraform is executed.\n      #\n      # Type: string\n      # Required: false\n      # Default: \"\"\n</code></pre>"},{"location":"workflows/tf-plan/#example","title":"Example","text":""},{"location":"workflows/tf-plan/#faq","title":"FAQ","text":""}]}